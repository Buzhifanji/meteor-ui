function C(){}function I(t,n){for(const e in n)t[e]=n[e];return t}function $(t){return t()}function j(){return Object.create(null)}function u(t){t.forEach($)}function v(t){return typeof t=="function"}function J(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function N(t){return Object.keys(t).length===0}function K(t){const n={};for(const e in t)e[0]!=="$"&&(n[e]=t[e]);return n}function Q(t,n){t.appendChild(n)}function R(t,n,e){t.insertBefore(n,e||null)}function O(t){t.parentNode.removeChild(t)}function U(t){return document.createElement(t)}function T(t){return document.createTextNode(t)}function W(){return T(" ")}function X(t,n,e){e==null?t.removeAttribute(n):t.getAttribute(n)!==e&&t.setAttribute(n,e)}function H(t){return Array.from(t.childNodes)}function Y(t){const n={};for(const e of t)n[e.name]=e.value;return n}let l;function f(t){l=t}function Z(){if(!l)throw new Error("Function called outside component initialization");return l}const d=[],S=[],h=[],A=[],L=Promise.resolve();let g=!1;function z(){g||(g=!0,L.then(M))}function b(t){h.push(t)}const y=new Set;let _=0;function M(){const t=l;do{for(;_<d.length;){const n=d[_];_++,f(n),B(n.$$)}for(f(null),d.length=0,_=0;S.length;)S.pop()();for(let n=0;n<h.length;n+=1){const e=h[n];y.has(e)||(y.add(e),e())}h.length=0}while(d.length);for(;A.length;)A.pop()();g=!1,y.clear(),f(t)}function B(t){if(t.fragment!==null){t.update(),u(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(b)}}const F=new Set;function P(t,n){t&&t.i&&(F.delete(t),t.i(n))}function V(t,n,e,c){const{fragment:i,on_mount:m,on_destroy:a,after_update:p}=t.$$;i&&i.m(n,e),c||b(()=>{const s=m.map($).filter(v);a?a.push(...s):u(s),t.$$.on_mount=[]}),p.forEach(b)}function q(t,n){const e=t.$$;e.fragment!==null&&(u(e.on_destroy),e.fragment&&e.fragment.d(n),e.on_destroy=e.fragment=null,e.ctx=[])}function D(t,n){t.$$.dirty[0]===-1&&(d.push(t),z(),t.$$.dirty.fill(0)),t.$$.dirty[n/31|0]|=1<<n%31}function tt(t,n,e,c,i,m,a,p=[-1]){const s=l;f(t);const o=t.$$={fragment:null,ctx:null,props:m,update:C,not_equal:i,bound:j(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(n.context||(s?s.$$.context:[])),callbacks:j(),dirty:p,skip_bound:!1,root:n.target||s.$$.root};a&&a(o.root);let k=!1;if(o.ctx=e?e(t,n.props||{},(r,x,...w)=>{const E=w.length?w[0]:x;return o.ctx&&i(o.ctx[r],o.ctx[r]=E)&&(!o.skip_bound&&o.bound[r]&&o.bound[r](E),k&&D(t,r)),x}):[],o.update(),k=!0,u(o.before_update),o.fragment=c?c(o.ctx):!1,n.target){if(n.hydrate){const r=H(n.target);o.fragment&&o.fragment.l(r),r.forEach(O)}else o.fragment&&o.fragment.c();n.intro&&P(t.$$.fragment),V(t,n.target,n.anchor,n.customElement),M()}f(s)}let G;typeof HTMLElement=="function"&&(G=class extends HTMLElement{constructor(){super();this.attachShadow({mode:"open"})}connectedCallback(){const{on_mount:t}=this.$$;this.$$.on_disconnect=t.map($).filter(v);for(const n in this.$$.slotted)this.appendChild(this.$$.slotted[n])}attributeChangedCallback(t,n,e){this[t]=e}disconnectedCallback(){u(this.$$.on_disconnect)}$destroy(){q(this,1),this.$destroy=C}$on(t,n){const e=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return e.push(n),()=>{const c=e.indexOf(n);c!==-1&&e.splice(c,1)}}$set(t){this.$$set&&!N(t)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}});export{G as S,Y as a,R as b,W as c,X as d,U as e,M as f,Z as g,O as h,tt as i,I as j,K as k,Q as l,C as n,J as s};
